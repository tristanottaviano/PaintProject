
package GUI;

import javax.swing.JFileChooser;
import java.io.*;
import Formes.*;
import java.util.ArrayList;

/**
 *
 * @author pierrecharbit
 */
public class Appli extends javax.swing.JFrame {

    /**
     * Creates new form Appli
     */
    public Appli() {
        initComponents();
        ardoise1.setApp(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupActions = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        MoveButton = new javax.swing.JToggleButton();
        boutonSelec = new javax.swing.JToggleButton();
        boutonCercle = new javax.swing.JToggleButton();
        RightButton = new javax.swing.JToggleButton();
        LigneBriseeButton = new javax.swing.JToggleButton();
        PolygoneButton = new javax.swing.JToggleButton();
        ParallelogrammeButton = new javax.swing.JToggleButton();
        RectangleButton = new javax.swing.JToggleButton();
        PencilButton = new javax.swing.JToggleButton();
        TextButton = new javax.swing.JToggleButton();
        ClearButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        ScaleLabel = new javax.swing.JLabel();
        ScaleField = new javax.swing.JTextField();
        ZoomPanel = new javax.swing.JPanel();
        ZoomLabel = new javax.swing.JLabel();
        XmaxLabel = new javax.swing.JLabel();
        XminLabel = new javax.swing.JLabel();
        YminLabel = new javax.swing.JLabel();
        XmaxTextField = new javax.swing.JTextField();
        YmaxLabel = new javax.swing.JLabel();
        XminTextField = new javax.swing.JTextField();
        YminTextField = new javax.swing.JTextField();
        YmaxTextField = new javax.swing.JTextField();
        displayGridLabel = new javax.swing.JLabel();
        displayGridButton = new javax.swing.JButton();
        ZoomButton = new javax.swing.JToggleButton();
        SelectionPanel = new javax.swing.JPanel();
        SelectionLabel = new javax.swing.JLabel();
        DeleteButton = new javax.swing.JButton();
        PerimeterLabel = new javax.swing.JLabel();
        AreaLabel = new javax.swing.JLabel();
        PerimeterValueLabel = new javax.swing.JLabel();
        AreaValueLabel = new javax.swing.JLabel();
        ConvexLabel = new javax.swing.JLabel();
        ConvexValueLabel = new javax.swing.JLabel();
        ColorLabel = new javax.swing.JLabel();
        gridLockLabel = new javax.swing.JLabel();
        gridLockButton = new javax.swing.JButton();
        ColorButton = new javax.swing.JButton();
        ardoise1 = new GUI.Ardoise();
        jMenuBar1 = new javax.swing.JMenuBar();
        Menu = new javax.swing.JMenu();
        SaveMenuItem = new javax.swing.JMenuItem();
        LoadMenuItem = new javax.swing.JMenuItem();
        InsertMenu = new javax.swing.JMenu();
        RightMenuItem = new javax.swing.JMenuItem();
        CircleMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel3.setMinimumSize(new java.awt.Dimension(930, 40));
        jPanel3.setLayout(new java.awt.GridLayout(1, 0));

        buttonGroupActions.add(MoveButton);
        MoveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/mode_Move.png"))); // NOI18N
        MoveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MoveButtonActionPerformed(evt);
            }
        });
        jPanel3.add(MoveButton);

        buttonGroupActions.add(boutonSelec);
        boutonSelec.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/mode_select.png"))); // NOI18N
        boutonSelec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonSelecActionPerformed(evt);
            }
        });
        jPanel3.add(boutonSelec);

        buttonGroupActions.add(boutonCercle);
        boutonCercle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/modeCircle.png"))); // NOI18N
        boutonCercle.setPreferredSize(new java.awt.Dimension(30, 40));
        boutonCercle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonCercleActionPerformed(evt);
            }
        });
        jPanel3.add(boutonCercle);

        buttonGroupActions.add(RightButton);
        RightButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/mode_lines.png"))); // NOI18N
        RightButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RightButtonActionPerformed(evt);
            }
        });
        jPanel3.add(RightButton);

        buttonGroupActions.add(LigneBriseeButton);
        LigneBriseeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/mode_Polyline.png"))); // NOI18N
        LigneBriseeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LigneBriseeButtonActionPerformed(evt);
            }
        });
        jPanel3.add(LigneBriseeButton);

        buttonGroupActions.add(PolygoneButton);
        PolygoneButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/mode_polygons.png"))); // NOI18N
        PolygoneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PolygoneButtonActionPerformed(evt);
            }
        });
        jPanel3.add(PolygoneButton);

        buttonGroupActions.add(ParallelogrammeButton);
        ParallelogrammeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/mode_parallelogram.png"))); // NOI18N
        ParallelogrammeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ParallelogrammeButtonActionPerformed(evt);
            }
        });
        jPanel3.add(ParallelogrammeButton);

        buttonGroupActions.add(RectangleButton);
        RectangleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/mode_rectangles3.png"))); // NOI18N
        RectangleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RectangleButtonActionPerformed(evt);
            }
        });
        jPanel3.add(RectangleButton);

        buttonGroupActions.add(PencilButton);
        PencilButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/mode_Pencil.png"))); // NOI18N
        PencilButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PencilButtonActionPerformed(evt);
            }
        });
        jPanel3.add(PencilButton);

        buttonGroupActions.add(TextButton);
        TextButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/mode_Text.png"))); // NOI18N
        TextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextButtonActionPerformed(evt);
            }
        });
        jPanel3.add(TextButton);

        ClearButton.setBackground(new java.awt.Color(150, 80, 70));
        ClearButton.setFont(new java.awt.Font("Ubuntu", 1, 14)); // NOI18N
        ClearButton.setForeground(new java.awt.Color(0, 0, 0));
        ClearButton.setText("CLEAR");
        ClearButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 625, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ClearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ClearButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setMinimumSize(new java.awt.Dimension(189, 764));

        ScaleLabel.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        ScaleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ScaleLabel.setText("BrushSize");
        ScaleLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        ScaleField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ScaleField.setText("1");
        ScaleField.setMinimumSize(new java.awt.Dimension(80, 24));
        ScaleField.setPreferredSize(new java.awt.Dimension(80, 24));
        ScaleField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ScaleFieldActionPerformed(evt);
            }
        });

        ZoomPanel.setBackground(new java.awt.Color(100, 100, 100));
        ZoomPanel.setMinimumSize(new java.awt.Dimension(185, 235));

        ZoomLabel.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        ZoomLabel.setText("Zoom");

        XmaxLabel.setText("Xmax");

        XminLabel.setText("Xmin");

        YminLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        YminLabel.setText("Ymin");

        XmaxTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        XmaxTextField.setText("10");
        XmaxTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        XmaxTextField.setMaximumSize(new java.awt.Dimension(64, 24));
        XmaxTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XmaxTextFieldActionPerformed(evt);
            }
        });

        YmaxLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        YmaxLabel.setText("Ymax");

        XminTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        XminTextField.setText("-1");
        XminTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        XminTextField.setMaximumSize(new java.awt.Dimension(64, 24));
        XminTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XminTextFieldActionPerformed(evt);
            }
        });

        YminTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        YminTextField.setText("-1");
        YminTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        YminTextField.setMaximumSize(new java.awt.Dimension(64, 24));
        YminTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                YminTextFieldActionPerformed(evt);
            }
        });

        YmaxTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        YmaxTextField.setText("10");
        YmaxTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        YmaxTextField.setMaximumSize(new java.awt.Dimension(64, 24));
        YmaxTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                YmaxTextFieldActionPerformed(evt);
            }
        });

        displayGridLabel.setFont(new java.awt.Font("Ubuntu", 1, 14)); // NOI18N
        displayGridLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        displayGridLabel.setText("Display Grid");

        displayGridButton.setText("ON");
        displayGridButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        displayGridButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayGridButtonActionPerformed(evt);
            }
        });

        buttonGroupActions.add(ZoomButton);
        ZoomButton.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        ZoomButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/mode_Zoom.png"))); // NOI18N
        ZoomButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ZoomButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ZoomPanelLayout = new javax.swing.GroupLayout(ZoomPanel);
        ZoomPanel.setLayout(ZoomPanelLayout);
        ZoomPanelLayout.setHorizontalGroup(
            ZoomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ZoomPanelLayout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(ZoomLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ZoomPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ZoomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ZoomPanelLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(XminLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(XmaxLabel)
                        .addGap(16, 16, 16))
                    .addGroup(ZoomPanelLayout.createSequentialGroup()
                        .addGroup(ZoomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ZoomPanelLayout.createSequentialGroup()
                                .addGroup(ZoomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(ZoomPanelLayout.createSequentialGroup()
                                        .addGap(5, 5, 5)
                                        .addGroup(ZoomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(XminTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(YminTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(YminLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(50, 50, 50)
                                .addGroup(ZoomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(XmaxTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(YmaxTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(YmaxLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(ZoomPanelLayout.createSequentialGroup()
                                .addGap(54, 54, 54)
                                .addComponent(displayGridButton)))
                        .addGap(12, 12, 12))
                    .addGroup(ZoomPanelLayout.createSequentialGroup()
                        .addComponent(displayGridLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ZoomPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ZoomButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48))
        );
        ZoomPanelLayout.setVerticalGroup(
            ZoomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ZoomPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ZoomLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ZoomButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(ZoomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(XmaxLabel)
                    .addComponent(XminLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ZoomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(XmaxTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(XminTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ZoomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(YmaxLabel)
                    .addComponent(YminLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ZoomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(YminTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(YmaxTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(displayGridLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(displayGridButton)
                .addContainerGap())
        );

        SelectionPanel.setBackground(new java.awt.Color(110, 100, 100));

        SelectionLabel.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        SelectionLabel.setText("Selection");

        DeleteButton.setBackground(new java.awt.Color(170, 100, 82));
        DeleteButton.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        DeleteButton.setForeground(new java.awt.Color(10, 10, 10));
        DeleteButton.setText("Delete");
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });

        PerimeterLabel.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        PerimeterLabel.setText("Perimeter");
        PerimeterLabel.setAlignmentY(0.0F);

        AreaLabel.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        AreaLabel.setText("Surface Area");
        AreaLabel.setAlignmentY(0.0F);

        PerimeterValueLabel.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        PerimeterValueLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        PerimeterValueLabel.setText("NA");
        PerimeterValueLabel.setAlignmentY(0.0F);

        AreaValueLabel.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        AreaValueLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        AreaValueLabel.setText("NA");
        AreaValueLabel.setAlignmentY(0.0F);

        ConvexLabel.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        ConvexLabel.setText("Convex");
        ConvexLabel.setAlignmentY(0.0F);

        ConvexValueLabel.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        ConvexValueLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ConvexValueLabel.setText("NA");
        ConvexValueLabel.setAlignmentY(0.0F);

        javax.swing.GroupLayout SelectionPanelLayout = new javax.swing.GroupLayout(SelectionPanel);
        SelectionPanel.setLayout(SelectionPanelLayout);
        SelectionPanelLayout.setHorizontalGroup(
            SelectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SelectionPanelLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(SelectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(AreaValueLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ConvexValueLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PerimeterValueLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(15, 15, 15))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SelectionPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(SelectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SelectionPanelLayout.createSequentialGroup()
                        .addGroup(SelectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(PerimeterLabel)
                            .addComponent(DeleteButton))
                        .addGap(52, 52, 52))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SelectionPanelLayout.createSequentialGroup()
                        .addComponent(SelectionLabel)
                        .addGap(36, 36, 36))))
            .addGroup(SelectionPanelLayout.createSequentialGroup()
                .addGroup(SelectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SelectionPanelLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(AreaLabel))
                    .addGroup(SelectionPanelLayout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(ConvexLabel)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        SelectionPanelLayout.setVerticalGroup(
            SelectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SelectionPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(SelectionLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(DeleteButton)
                .addGap(31, 31, 31)
                .addComponent(PerimeterLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PerimeterValueLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AreaLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AreaValueLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ConvexLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ConvexValueLabel)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        ColorLabel.setFont(new java.awt.Font("Ubuntu", 1, 14)); // NOI18N
        ColorLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ColorLabel.setText("Change Color");

        gridLockLabel.setFont(new java.awt.Font("Ubuntu", 1, 14)); // NOI18N
        gridLockLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridLockLabel.setText("Grid Lock");

        gridLockButton.setText("OFF");
        gridLockButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gridLockButtonActionPerformed(evt);
            }
        });

        ColorButton.setBackground(new java.awt.Color(0, 0, 0));
        ColorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ColorButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ZoomPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(SelectionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(ColorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(66, 66, 66))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(gridLockLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ColorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE))
                        .addGap(37, 37, 37))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(gridLockButton, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(ScaleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ScaleField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(49, 49, 49))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ScaleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ScaleField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ColorLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ColorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(gridLockLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(gridLockButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(SelectionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ZoomPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout ardoise1Layout = new javax.swing.GroupLayout(ardoise1);
        ardoise1.setLayout(ardoise1Layout);
        ardoise1Layout.setHorizontalGroup(
            ardoise1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 769, Short.MAX_VALUE)
        );
        ardoise1Layout.setVerticalGroup(
            ardoise1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        Menu.setText("File");

        SaveMenuItem.setText("Save");
        SaveMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveMenuItemActionPerformed(evt);
            }
        });
        Menu.add(SaveMenuItem);

        LoadMenuItem.setText("Load");
        LoadMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoadMenuItemActionPerformed(evt);
            }
        });
        Menu.add(LoadMenuItem);

        jMenuBar1.add(Menu);

        InsertMenu.setText("Insert");

        RightMenuItem.setText("Right");
        RightMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RightMenuItemActionPerformed(evt);
            }
        });
        InsertMenu.add(RightMenuItem);

        CircleMenuItem.setText("Circle");
        CircleMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CircleMenuItemActionPerformed(evt);
            }
        });
        InsertMenu.add(CircleMenuItem);

        jMenuBar1.add(InsertMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ardoise1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ardoise1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void boutonCercleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonCercleActionPerformed
        ardoise1.setMode("Cercle");
    }//GEN-LAST:event_boutonCercleActionPerformed

    private void boutonSelecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonSelecActionPerformed
        ardoise1.setMode("Select");
    }//GEN-LAST:event_boutonSelecActionPerformed

    private void LigneBriseeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LigneBriseeButtonActionPerformed
        ardoise1.setMode("LigneBrisee");
    }//GEN-LAST:event_LigneBriseeButtonActionPerformed

    private void PolygoneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PolygoneButtonActionPerformed
        ardoise1.setMode("Polygone");
    }//GEN-LAST:event_PolygoneButtonActionPerformed

    private void ParallelogrammeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ParallelogrammeButtonActionPerformed
        ardoise1.setMode("Parallelogramme");
    }//GEN-LAST:event_ParallelogrammeButtonActionPerformed

    private void RectangleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RectangleButtonActionPerformed
        ardoise1.setMode("Rectangle");
    }//GEN-LAST:event_RectangleButtonActionPerformed

    private void ScaleFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ScaleFieldActionPerformed
        
        
        try{
            
            double val = Double.valueOf(ScaleField.getText()); 
            if (val>=1){
                
                ardoise1.setBrushSize(val);
                ScaleField.setText(""+(int)val);
                
                if (ardoise1.getdCourant()!=null) ardoise1.getdCourant().setBrushSize((int)val);

            }
            
            else {
                
                ScaleField.setText("1");
                ardoise1.setBrushSize(1);
                if (ardoise1.getdCourant()!=null) ardoise1.getdCourant().setBrushSize((int)val);
                
            }

            ardoise1.repaint();
            
        }
        catch (Exception e){
            
            System.out.println("Could not convert this in a Double!");
            
        }
        
    }//GEN-LAST:event_ScaleFieldActionPerformed

    private void XmaxTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XmaxTextFieldActionPerformed
        try{
            
            double val = Double.valueOf(XmaxTextField.getText());
            
            if (val <= Double.valueOf(XminTextField.getText())) return;
                
            ardoise1.setxMax(val);
            ardoise1.repaint();
            
        }
        
        catch (Exception e){
            
            System.out.println("Could not read xMax");
            
        }
        
    }//GEN-LAST:event_XmaxTextFieldActionPerformed

    private void XminTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XminTextFieldActionPerformed
        
        try{
        
            double val = Double.valueOf(XminTextField.getText());
            
            if (val >= Double.valueOf(XmaxTextField.getText())) return;
            
            ardoise1.setxMin(val);
            ardoise1.repaint();
            
        }
        
        catch (Exception e){
            
            System.out.println("Could not read xMin");
            
        }
        
    }//GEN-LAST:event_XminTextFieldActionPerformed

    private void YminTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_YminTextFieldActionPerformed
        
        try {
        
            double val = Double.valueOf(YminTextField.getText());
            
            if (val >= Double.valueOf(YmaxTextField.getText())) return;
            
            ardoise1.setyMin(val);
            ardoise1.repaint();
            
        }
        
        catch (Exception e){
            
            System.out.println("Could not read yMin");
            
        }
    }//GEN-LAST:event_YminTextFieldActionPerformed

    private void YmaxTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_YmaxTextFieldActionPerformed
        
        try{
            
            double val = Double.valueOf(YmaxTextField.getText());
            
            if (val <= Double.valueOf(YminTextField.getText())) return;
            
            ardoise1.setyMax(val);
            ardoise1.repaint();

        }
        
        catch (Exception e){
            
            System.out.println("Could not read yMax");
            
        }
    }//GEN-LAST:event_YmaxTextFieldActionPerformed

    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
        if(ardoise1.getdCourant() != null){
       
            ardoise1.getListeDes().remove(ardoise1.getdCourant());
            ardoise1.setdCourant(null);
            ardoise1.repaint();
            
        }
    }//GEN-LAST:event_DeleteButtonActionPerformed

    private void gridLockButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gridLockButtonActionPerformed
        if (ardoise1.gridLock){
            ardoise1.gridLock = false;
            this.gridLockButton.setText("OFF");   
        }
        else {
            ardoise1.gridLock = true;
            this.gridLockButton.setText("ON");
        }
    }//GEN-LAST:event_gridLockButtonActionPerformed

    private void ColorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ColorButtonActionPerformed
        this.ColorWindow.setVisible(true);
    }//GEN-LAST:event_ColorButtonActionPerformed

    private void displayGridButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayGridButtonActionPerformed
        if (ardoise1.displayGrid){
            ardoise1.displayGrid = false;
            this.displayGridButton.setText("OFF");   
        }
        else {
            ardoise1.displayGrid = true;
            this.displayGridButton.setText("ON");
        }
        
        ardoise1.repaint();
    }//GEN-LAST:event_displayGridButtonActionPerformed

    private void SaveMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveMenuItemActionPerformed
       
        JFileChooser chooser = new JFileChooser(".");
        int x = chooser.showSaveDialog(this);
        
        if (x == JFileChooser.APPROVE_OPTION){
            
            //On prend le fichier enregistré
            File file = chooser.getSelectedFile();
            
            //Si le fichier est null on arrête
            if (file == null) return;
            
            //On enregistre les informations dans le file
            try{
            
                FileOutputStream fileOut = new FileOutputStream(file);
                ObjectOutputStream objOut = new ObjectOutputStream(fileOut);
                
                objOut.writeObject(ardoise1.getListeDes());
                objOut.close();
                fileOut.close();
                
            }
            catch(IOException e){
                
                System.out.println("Erreur lors de l'enregistrement du fichier!");
                
            }
            
        }
        
    }//GEN-LAST:event_SaveMenuItemActionPerformed

    private void LoadMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoadMenuItemActionPerformed
        
        JFileChooser chooser = new JFileChooser(".");
        int x = chooser.showOpenDialog(this);
        
        if (x == JFileChooser.APPROVE_OPTION){
            
            //On prend le fichier enregistré
            File file = chooser.getSelectedFile();
            
            //Si le fichier est null on arrête
            if (file == null) return;
            
            //On enregistre les informations dans le file
            try{
            
                FileInputStream fileIn = new FileInputStream(file);
                ObjectInputStream objOut = new ObjectInputStream(fileIn);
                
                ardoise1.setListeDes((ArrayList<Dessinable>)objOut.readObject());
                objOut.close();
                fileIn.close();
                
            }
            catch(IOException e){
                
                System.out.println("Erreur lors de l'ouverture du fichier! (IO Exception)");
                
            }
            
            catch (ClassNotFoundException e){
                    
                System.out.println("Erreur lors de l'ouverture du fichier! (ClassNotFound)");
                    
            }
            
            ardoise1.repaint();
            
        }
        
    }//GEN-LAST:event_LoadMenuItemActionPerformed

    private void ClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearButtonActionPerformed
        
        ardoise1.getListeDes().clear();
        ardoise1.setdCourant(null);
        ardoise1.setxMax(10);
        ardoise1.setxMin(-1);
        ardoise1.setyMax(10);
        ardoise1.setyMin(-1);

        this.XminTextField.setText("-1");
        this.XmaxTextField.setText("10");

        this.YminTextField.setText("-1");
        this.YmaxTextField.setText("10");   

        ardoise1.repaint();
        
    }//GEN-LAST:event_ClearButtonActionPerformed

    private void PencilButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PencilButtonActionPerformed
        ardoise1.setMode("Pencil");
    }//GEN-LAST:event_PencilButtonActionPerformed

    private void MoveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MoveButtonActionPerformed
        ardoise1.setMode("Move");
    }//GEN-LAST:event_MoveButtonActionPerformed

    private void TextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextButtonActionPerformed
        ardoise1.setMode("Text");
    }//GEN-LAST:event_TextButtonActionPerformed

    private void ZoomButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ZoomButtonActionPerformed
        ardoise1.setMode("Zoom");
    }//GEN-LAST:event_ZoomButtonActionPerformed

    private void RightMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RightMenuItemActionPerformed
        RightFrame frame = new RightFrame();
        frame.app = this;
        frame.setVisible(true);
    }//GEN-LAST:event_RightMenuItemActionPerformed

    private void CircleMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CircleMenuItemActionPerformed
        CircleFrame frame = new CircleFrame();
        frame.app = this;
        frame.setVisible(true);
    }//GEN-LAST:event_CircleMenuItemActionPerformed

    private void RightButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RightButtonActionPerformed
        ardoise1.setMode("Right");
    }//GEN-LAST:event_RightButtonActionPerformed

    
    public void openTextFrame(){
        
        TextFrame frame = new TextFrame(this);
        frame.setVisible(true);
        
    }
    
    //SETTERS
    public void setPerimetre(String s){
        
        this.PerimeterValueLabel.setText(s);
        
    }
    
    public void setText(String s){
        
        this.drawableText = s;
        
    }
    
    public void setArea(String s){
        
        this.AreaValueLabel.setText(s);
        
    }
    
    public void setConvex(String s){
        
        this.ConvexValueLabel.setText(s);
        
    }
    
    public void setZoomFiedls(double xMin, double xMax, double yMin, double yMax){
        
        this.XminTextField.setText(String.format("%.2f", xMin));
        this.XmaxTextField.setText(String.format("%.2f", xMax));

        this.YminTextField.setText(String.format("%.2f", yMin));
        this.YmaxTextField.setText(String.format("%.2f", yMax));        
        
    }
    
    //GETTER
    public javax.swing.JButton getColorButton(){
        
        return this.ColorButton;
        
    }
    
    public String getText(){
    
        return this.drawableText;
        
    }
    
    public Ardoise getArdoise(){
        
        return this.ardoise1;
        
    }
    
// J'ai mis en commentaire le main inclus par netbeans    
//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Appli.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Appli.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Appli.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Appli.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Appli().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AreaLabel;
    private javax.swing.JLabel AreaValueLabel;
    private javax.swing.JMenuItem CircleMenuItem;
    private javax.swing.JButton ClearButton;
    private javax.swing.JButton ColorButton;
    private javax.swing.JLabel ColorLabel;
    private javax.swing.JLabel ConvexLabel;
    private javax.swing.JLabel ConvexValueLabel;
    private javax.swing.JButton DeleteButton;
    private javax.swing.JMenu InsertMenu;
    private javax.swing.JToggleButton LigneBriseeButton;
    private javax.swing.JMenuItem LoadMenuItem;
    private javax.swing.JMenu Menu;
    private javax.swing.JToggleButton MoveButton;
    private javax.swing.JToggleButton ParallelogrammeButton;
    private javax.swing.JToggleButton PencilButton;
    private javax.swing.JLabel PerimeterLabel;
    private javax.swing.JLabel PerimeterValueLabel;
    private javax.swing.JToggleButton PolygoneButton;
    private javax.swing.JToggleButton RectangleButton;
    private javax.swing.JToggleButton RightButton;
    private javax.swing.JMenuItem RightMenuItem;
    private javax.swing.JMenuItem SaveMenuItem;
    private javax.swing.JTextField ScaleField;
    private javax.swing.JLabel ScaleLabel;
    private javax.swing.JLabel SelectionLabel;
    private javax.swing.JPanel SelectionPanel;
    private javax.swing.JToggleButton TextButton;
    private javax.swing.JLabel XmaxLabel;
    private javax.swing.JTextField XmaxTextField;
    private javax.swing.JLabel XminLabel;
    private javax.swing.JTextField XminTextField;
    private javax.swing.JLabel YmaxLabel;
    private javax.swing.JTextField YmaxTextField;
    private javax.swing.JLabel YminLabel;
    private javax.swing.JTextField YminTextField;
    private javax.swing.JToggleButton ZoomButton;
    private javax.swing.JLabel ZoomLabel;
    private javax.swing.JPanel ZoomPanel;
    private GUI.Ardoise ardoise1;
    private javax.swing.JToggleButton boutonCercle;
    private javax.swing.JToggleButton boutonSelec;
    private javax.swing.ButtonGroup buttonGroupActions;
    private javax.swing.JButton displayGridButton;
    private javax.swing.JLabel displayGridLabel;
    private javax.swing.JButton gridLockButton;
    private javax.swing.JLabel gridLockLabel;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    // End of variables declaration//GEN-END:variables
    private ColorFrame ColorWindow = new ColorFrame(this);
    private String drawableText = "Default Text (Right click to change)";
    
}
